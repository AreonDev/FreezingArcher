#version 410

//Input format
//####################################################
layout(location = 0) in vec2 InTexCoord1;
layout(location = 1) in vec2 InTexCoord2;
layout(location = 2) in vec2 InTexCoord3;
layout(location = 3) in vec2 InTexCoord4;
layout(location = 4) in vec2 InTexCoord5;

layout(location = 5) in vec4 InColor;

layout(location = 6) in float InTexCoordIntensity1;
layout(location = 7) in float InTexCoordIntensity2;
layout(location = 8) in float InTexCoordIntensity3;
layout(location = 9) in float InTexCoordIntensity4;
layout(location = 10) in float InTexCoordIntensity5;
//####################################################

layout(location = 13) in vec3 vertex_light_direction;
layout(location = 14) in vec3 vertex_normal;

layout(location = 0) out vec4 frag_colour;
layout(location = 1) out vec4 depth_colour;

uniform ConfigurationBlock
{
	int blah;
	int blah2;
};

uniform sampler2D Texture1;
uniform sampler2D Texture2;
uniform sampler2D Texture3;
uniform sampler2D Texture4;
uniform sampler2D Texture5;
    
void main() 
{
	vec4 without_light_color =  vec4(1.0, 1.0, 1.0, 1.0);

	without_light_color = InTexCoordIntensity1 * texture2D(Texture1, InTexCoord1);
	without_light_color += InTexCoordIntensity2 * texture2D(Texture2, InTexCoord2);
	without_light_color += InTexCoordIntensity3 * texture2D(Texture3, InTexCoord3);
	without_light_color += InTexCoordIntensity4 * texture2D(Texture4, InTexCoord4);
	without_light_color += InTexCoordIntensity5 * texture2D(Texture5, InTexCoord5);

	float diffuse_value = max(dot(vertex_normal, vertex_light_direction), 0.3);
	vec4 ambient_color = vec4(1.0, 1.0, 1.0, 1.0);

    frag_colour = diffuse_value * without_light_color * ambient_color;
}
                                    
