#version 410

layout(location = 1) in vec2 InTexCoord;

layout(location = 0) out vec4 frag_color;

uniform sampler2D InputTexture;
uniform sampler2D overlayTexture;
uniform int overlayBlendMode;
uniform float overlayFactor;
 
void main() {
        if (overlayBlendMode == 0) // Add
        {
                frag_color = (texture(InputTexture, InTexCoord) * (1 - overlayFactor)) +
                             (texture(overlayTexture, InTexCoord) * overlayFactor);
        }
        else if (overlayBlendMode == 1) // Subtract
        {
                frag_color = (texture(InputTexture, InTexCoord) * (1 - overlayFactor)) -
                             (texture(overlayTexture, InTexCoord) * overlayFactor);
        }
        else if (overlayBlendMode == 2) // SubtractInverse
        {
                frag_color = (texture(overlayTexture, InTexCoord) * (1 - overlayFactor)) -
                             (texture(InputTexture, InTexCoord) * overlayFactor);
        }
        else if (overlayBlendMode == 3) // Multiply
        {
                vec4 inp = texture(InputTexture, InTexCoord);
                vec4 mult_color = inp * texture(overlayTexture, InTexCoord);
                frag_color = (inp * (1 - overlayFactor)) + (mult_color * overlayFactor);
        }
        else if (overlayBlendMode == 4) // Divide
        {
                frag_color = (texture(InputTexture, InTexCoord) * (1 - overlayFactor)) /
                             (texture(overlayTexture, InTexCoord) * overlayFactor);
        }
        else if (overlayBlendMode == 5) // DivideInverse
        {
                frag_color = (texture(overlayTexture, InTexCoord) * (1 - overlayFactor)) /
                             (texture(InputTexture, InTexCoord) * overlayFactor);
        }
}